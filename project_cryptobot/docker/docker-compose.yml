version: '3.8'

services:
  fastapi:
    build: 
      context: ..
      dockerfile: docker/Dockerfile.fastapi
    ports:
      - "8000:8000"
    depends_on:
      - mongodb
    volumes:
      - ../src:/app
    #networks:
     # - mongo_network

  mongodb:
    image: mongo:latest
    container_name: mongodb_cryptobot
    environment:
      - MONGO_INITDB_DATABASE=Cryptobot  
      - MONGO_INITDB_ROOT_USERNAME=CryptoBot  
      - MONGO_INITDB_ROOT_PASSWORD=bot123 
    ports:
      - "27017:27017"
    volumes:
      - ../src/initdb.d:/docker-entrypoint-initdb.d 
      - mongodb_data:/data/db 
    command: mongod --auth
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    restart: unless-stopped

  
  #flask:
   # build:
    #  context: ..
    # dockerfile: ./Dockerfile.flask
    #ports:
    #  - "5001:5000"
    #volumes:
    #  - ../dashboard:/app
    #networks:
    #  - app_network

  airflow-webserver:
    image: apache/airflow:2.7.0
    restart: always
    environment:
      AIRFLOW__CORE__EXECUTOR: "LocalExecutor"
      AIRFLOW__CORE__DAGS_ARE_PAUSED_AT_CREATION: "false"
      AIRFLOW__WEBSERVER__RBAC: "true"
      AIRFLOW_UID: "50000"
    volumes:
      - ./airflow/dags:/opt/airflow/dags
      - ./airflow/logs:/opt/airflow/logs
    ports:
      - "8080:8080"
    command: ["airflow", "webserver"]
    depends_on:
      - airflow-init
  
  airflow-scheduler:
    image: apache/airflow:2.7.0
    restart: always
    command: scheduler
    environment:
      AIRFLOW__CORE__EXECUTOR: "LocalExecutor"
      AIRFLOW__CORE__DAGS_ARE_PAUSED_AT_CREATION: "false"
      AIRFLOW_UID: "50000"
    volumes:
      - ./airflow/dags:/opt/airflow/dags
      - ./airflow/logs:/opt/airflow/logs
    depends_on:
      - airflow-init
  
  postgres:
    image: postgres:14
    container_name: postgres
    environment:
      POSTGRES_USER: airflow
      POSTGRES_PASSWORD: airflow
      POSTGRES_DB: airflow
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    
  airflow-init:
    image: apache/airflow:2.7.0
    entrypoint: /bin/bash -c "airflow db init && airflow users create -r Admin -u team_admin -p projet_opa -e opateam@protonmail.com -f opa_team -l admin"
    volumes:
     - ./airflow/dags:/opt/airflow/dags
     - ./airflow/logs:/opt/airflow/logs

  #jupyter:
  #  build: .
  #  container_name: jupyter
  #  ports:
  #    - "8888:8888"
  #  volumes:
  #    - .:/app
  #  command: ["python", "-m", "jupyterlab", "--ip=0.0.0.0", "--port=8888", "--no-browser", "--allow-root"]
  
  cryptobot:
      build:
        context: ..
        dockerfile: docker/Dockerfile.flask
      container_name: cryptobot_dashboard
      ports:
        - "5000:5000"
      volumes:
        - ..:/app
      depends_on:
        mongodb:
          condition: service_healthy
      environment:
        - MONGODB_URI=mongodb://CryptoBot:bot123@mongodb:27017/Cryptobot?authSource=admin
        - PYTHONPATH=/app
        - FLASK_APP=dashboard.py
        - FLASK_ENV=development
        - FLASK_DEBUG=1
      working_dir: /app/dashboard
      command: bash -c "python update_data.py && python -m flask run --host=0.0.0.0 --port=5000"
      restart: unless-stopped

volumes:
  mongodb_data:
  postgres_data:
