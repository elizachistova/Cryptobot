version: '3.8'

services:
  fastapi:
    build: 
    context: ..
    dockerfile: ./docker/Dockerfile.fastapi
    ports:
      - "8000:8000"
    depends_on:
      - mongodb
    volumes:
      - ../src:/app
    networks:
      - mongo_network

  flask:
    build:
      context: ..
      dockerfile: ./docker/Dockerfile.flask
    ports:
      - "5001:5000"
    volumes:
      - ../dashboard:/app
    networks:
      - app_network

  mongodb:
    image: mongo:latest
    container_name: mongodb_cryptobot
    environment:
      - MONGO_INITDB_DATABASE=Cryptobot  
      - MONGO_INITDB_ROOT_USERNAME=CryptoBot  
      - MONGO_INITDB_ROOT_PASSWORD=bot123 
    ports:
      - "27017:27017"
    volumes:
      - ../src/initdb.d:/docker-entrypoint-initdb.d 
  
  airflow-webserver:
    image: apache/airflow:2.5.0
    container_name: airflow-webserver
    environment:
      - AIRFLOW__CORE__SQL_ALCHEMY_CONN=sqlite:////opt/airflow/airflow.db
      - AIRFLOW__CORE__LOAD_EXAMPLES=False
      - AIRFLOW__CORE__EXECUTOR=LocalExecutor
    ports:
      - "8080:8080"
    volumes:
      - ./airflow/dags:/opt/airflow/dags
      - ./airflow/logs:/opt/airflow/logs 

  airflow-scheduler:
    image: apache/airflow:2.5.0
    container_name: airflow-scheduler
    command: "scheduler"
    environment:
      - AIRFLOW__CORE__SQL_ALCHEMY_CONN=sqlite:////opt/airflow/airflow.db
    volumes:
      - ./airflow/dags:/opt/airflow/dags
      - ./airflow/logs:/opt/airflow/logs

  jupyter:
    build: .
    container_name: jupyter
    ports:
      - "8888:8888"
    volumes:
      - .:/app
    command: ["python", "-m", "jupyterlab", "--ip=0.0.0.0", "--port=8888", "--no-browser", "--allow-root"]

  cryptobot:
    build: 
      context: ..
      dockerfile: ./docker/Dockerfile.flask
    container_name: cryptobot_dashboard
    ports:
      - "5000:5000"
    volumes:
      - ../dashboard:/app
    depends_on:
      - mongodb
    environment:
      - MONGODB_URI=mongodb://CryptoBot:bot123@mongodb:27017/Cryptobot
      - PYTHONPATH=/app
      - FLASK_APP=dashboard.py
      - FLASK_ENV=development
      - FLASK_DEBUG=1
    working_dir: /app/ProjetFormationData/code/dashboard
    command: python -m flask run --host=0.0.0.0 --port=5000

volumes:
  mongodb_data: